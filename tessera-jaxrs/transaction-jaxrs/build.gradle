plugins {
    id "com.benjaminsproule.swagger" version "1.0.7"
}

dependencies {
    compile project(':tessera-jaxrs:common-jaxrs')
    compile project(':config')
    compile project(':shared')
    compile project(':tessera-core')
    compile project(':enclave:enclave-api')

    compile project(":tessera-partyinfo")

    implementation "org.hibernate:hibernate-validator:6.0.2.Final"

    compile 'javax.ws.rs:javax.ws.rs-api'
    compile 'io.swagger:swagger-annotations'

    compile 'javax.servlet:javax.servlet-api'
    compile 'org.apache.commons:commons-lang3'
    compile 'javax.persistence:javax.persistence-api'
    compile "javax.activation:javax.activation-api"
    compile "com.sun.mail:javax.mail"
    compile project(':encryption:encryption-api')

    testCompile "org.glassfish.jersey.test-framework:jersey-test-framework-core"
    testRuntimeOnly "org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2"
    testRuntimeOnly 'org.glassfish.jersey.media:jersey-media-json-processing'
    testRuntimeOnly 'org.glassfish.jersey.media:jersey-media-moxy'
    testRuntimeOnly "org.glassfish.jersey.inject:jersey-hk2:2.27"
    testImplementation project(':test-utils:mock-jaxrs')

    compile project(':service-locator:service-locator-api')
    runtimeOnly project(':service-locator:service-locator-spring')
    testImplementation project(':test-utils:mock-service-locator')
    testCompile "org.slf4j:jul-to-slf4j:1.7.5"
    testRuntime "org.glassfish.jersey.ext:jersey-bean-validation"

}



swagger {

    apiSource {
        springmvc = false

        schemes = ['http', 'https']
        host = 'localhost:8080'
        basePath = '/'
        outputFormats = ['json']
        //attachSwaggerArtifact = true

        locations = ['com.quorum.tessera.q2t','com.quorum.tessera.api.common']
        info {
            title = 'Tessera rest'
            version = project.properties["tessera.api.version"]
            license {
                url = 'http://www.apache.org/licenses/LICENSE-2.0.html'
                name = 'Apache 2.0'
            }
        }

        swaggerDirectory = ''+ project.buildDir +'/resources/main'
        //templatePath = '../src/main/swagger/strapdown.html.hbs'
       // outputPath = 'build/resources/main/swagger/swagger.html'
        swaggerFileName = 'swagger'

    }

    apiSource {
        springmvc = false

        schemes = ['http', 'https']
        host = 'localhost:8080'
        basePath = '/'
        outputFormats = ['json']
        //attachSwaggerArtifact = true

        locations = ['com.quorum.tessera.q2t','com.quorum.tessera.api.common']
        info {
            title = 'Tessera rest'
            version = project.properties["tessera.api.version"]
            license {
                url = 'http://www.apache.org/licenses/LICENSE-2.0.html'
                name = 'Apache 2.0'
            }
        }

        swaggerDirectory = ''+ project.buildDir +'/resources/main'
        templatePath =  ''+ rootProject.rootDir +'/tessera-jaxrs/src/main/swagger/strapdown.html.hbs'
        outputPath = ''+ project.buildDir +'/resources/main/swagger.html'
        swaggerFileName = 'swagger'

    }

}

task loaddeps() {

    def urls = []
    project.configurations.compileClasspath.resolve().flatten().each {
        urls += it.toURI().toURL()
    }
    urls.each {
        buildscript.classLoader.addURL it
    }

}

description = 'transaction-jaxrs'

generateSwaggerDocumentation.dependsOn(loaddeps)
jar.dependsOn(generateSwaggerDocumentation)